@startuml
title Start Rent Boarding House
Tenant -> BoardingHousePage: openAllBoardingHousePage()
BoardingHousePage -> BoardingController: getAllBoardingHouse()
BoardingController -> BoardingModel: getAllBoardingHouseData()
BoardingController <-- BoardingModel: boarding_houses_data
BoardingHousePage <-- BoardingController: boarding_houses_data
Tenant <-- BoardingHousePage: displayAllBoardingHousesPage(boarding_houses_data)

Tenant -> BoardingHousePage: openSelectedBoardingHouseDetail()
BoardingHousePage -> BoardingController: getSelectedBoardingHouseDetail()
BoardingController -> BoardingModel: selectedBoardingHouseDetailGet()
BoardingController <-- BoardingModel: boarding_house_detail_data
BoardingHousePage <-- BoardingController: boarding_house_detail_data
Tenant <-- BoardingHousePage: displaySelectedBoardingHouseDetailPage(boarding_house_detail_data)

Tenant -> BoardingHousePage: rentBoardingHouse()
BoardingHousePage -> BoardingController: rentBoardingHouseValidation(Tenant_details, boarding_details)
alt Valid
BoardingController -> TenantBoardingModel: insertRentBoardingHouse(Tenant_details, boarding_details)
BoardingController <-- TenantBoardingModel: success_response
BoardingHousePage <-- BoardingController: success_response
Tenant <-- BoardingHousePage: displaySelectedBoardingHouseDetailPage(boarding_house_detail_data, success_response)
else Not Valid
BoardingController <-- TenantBoardingModel: error_message_response
Tenant <-- BoardingHousePage: displaySelectedBoardingHouseDetailPage(boarding_house_detail_data, error_message_response)
end

@enduml