@startuml
actor "Admin" as act
participant ":CheckInvoiceRequest\n<<UI>>" as view
participant PaymentController as pctrl
participant ChatController as cctrl
participant TransactionModel as tm

act -> view : openCheckInvoicePage()
view -> pctrl : getCheckInvoicePage()
pctrl -> tm : getProcessingTransaction()
pctrl <-- tm : transaction_data
view <-- ctrl : transaction_data
act <-- view : displayCheckInvoicePage(transaction_data) 
alt (Approve Invoice)
    act -> view : approveInvoice()
    view -> pctrl : updateInvoiceStatus(invoiceId, response)
    pctrl -> tm : updateInvoiceStatus(invoiceId, response)

    opt (Tranfer Status is Processing Refund)
        pctrl -> tm : cancelPaymentStatus(invoiceId)
        pctrl -> cctrl : storeSpecificChatMessage(tenantId, reason)
    end
else (Reject Invoice)
    act -> view : rejectInvoice()
    act <-- view : displayReasonBox()
    act -> view : giveRejectionReason()
    
    view -> pctrl : updateInvoiceStatus(invoiceId, response, reason)
    pctrl -> cctrl : sendMessage(tenantId, reason)
    pctrl -> tm : updateInvoiceStatus(invoiceId, response)

    opt (Tranfer Status is Processing Refund)
        pctrl -> tm : cancelPaymentStatus(invoiceId)
    end
end
@enduml
